image: wizni/maven:3.3.3

stages:
  - build
  - make_docker
  - trigger
  - notifications
make_snapshot:
  stage: build
  image: wizni/maven:3.3.3
  script:
   - ( cd DataGenerator; mvn clean install )
   - mvn clean package -DskipTests -Dcheckstyle.skip -Pbuild-distr
   - cp zeppelin-distribution/target/zeppelin*.tar.gz /snapshots/
   - CI_SUCCESS_MSG="Build on $CI_BUILD_REF_NAME success! Commit $(git log -1 --oneline) Snapshot <http://188.166.190.20/demo/incubator-zeppelin/builds/${CI_BUILD_ID}/artifacts/file/zeppelin-distribution/target/zeppelin-0.6.0-incubating-SNAPSHOT.tar.gz>"
   - ./scripts/notify_slack.sh "$SLACK_CHANNEL" "PASS" "${CI_SUCCESS_MSG}" "$CI_SLACK_WEBHOOK_URL"es
  artifacts:
   name: "zeppelin_${CI_BUILD_REF_NAME}"
   paths:
   - zeppelin-distribution/target/zeppelin*.tar.gz

make_docker:
  stage: make_docker
  image: docker:latest
  services:
  - docker:dind
  script:
  - tar -zxf  $CI_PROJECT_DIR/zeppelin-distribution/target/zeppelin-0.6.0-incubating-SNAPSHOT.tar.gz -C $CI_PROJECT_DIR/
  - rm -f $CI_PROJECT_DIR/zeppelin-distribution/target/zeppelin-0.6.0-incubating-SNAPSHOT.tar.gz
  - sed -i "s/BUILD_COMMIT_ID/${CI_BUILD_REF}/g" $CI_PROJECT_DIR/Dockerfile
  - sed -i "s/CI_BUILD_NUMBER/${CI_BUILD_ID}/g" $CI_PROJECT_DIR/Dockerfile
  - sed -i "s/BRANCH_NAME/${CI_BUILD_REF_NAME}/g" $CI_PROJECT_DIR/Dockerfile
  - docker build -t wizni/zeppelin:${CI_BUILD_REF_NAME} .
  - docker inspect -f "{{json .ContainerConfig.Labels }}" wizni/zeppelin:${CI_BUILD_REF_NAME}
  - docker push wizni/zeppelin:${CI_BUILD_REF_NAME}

demo_deploy:
  stage: trigger
  dependencies: []
  only:
  - 1.0.0
  script:
  - curl -X POST -F token=${DEMO_DEPLOY_TOKEN} -F ref=${DEMO_DEPLOY_BRANCH} ${DEMO_TRIGGER_API}
  - ./scripts/notify_slack.sh "$SLACK_CHANNEL" "PASS" "${CI_SUCCESS_MSG}" "$CI_SLACK_WEBHOOK_URL"

notify:
  stage: notifications
  dependencies: []
  when: on_failure
  script:
  - CI_ERROR_MSG="Build on $CI_BUILD_REF_NAME failed! Commit $(git log -1 --oneline) See <http://188.166.190.20/demo/$(basename "$PWD")/commit/${CI_BUILD_REF}/builds>"
  - echo $CI_ERROR_MSG
  - echo "${PRE_LOAD}${CI_ERROR_MSG}${POST_LOAD}"
  - ./scripts/notify_slack.sh "$SLACK_CHANNEL" "FAIL" "$CI_ERROR_MSG" "$CI_SLACK_WEBHOOK_URL"
