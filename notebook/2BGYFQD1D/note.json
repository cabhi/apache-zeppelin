{
  "paragraphs": [
    {
      "text": "import org.elasticsearch.spark._\n\nimport com.stratio.datasource._\nimport com.stratio.datasource.mongodb._\nimport com.stratio.datasource.mongodb.schema._\nimport com.stratio.datasource.mongodb.writer._\nimport com.stratio.datasource.mongodb.config._\nimport com.stratio.datasource.mongodb.config.MongodbConfig._\nimport com.stratio.datasource.util.Config._\n\n\n//setup elastic search, index\u003d\u003edemo2, type\u003d\u003elogs\nval logs \u003d sqlContext.read.format(\"es\").load(\"demo2/logs\")\nlogs.registerTempTable(\"logs\")\n  \n//setup mongo, database\u003d\u003eappmap, collection\u003d\u003efeedbacks\nval builder \u003d MongodbConfigBuilder(Map(Host -\u003e List(\"localhost:27017\"), Database -\u003e \"appmap\", Collection -\u003e\"feedbacks\", SamplingRatio -\u003e 1.0))\nval readConfig \u003d builder.build()\nval mongoRDD \u003d sqlContext.fromMongoDB(readConfig)\nmongoRDD.registerTempTable(\"feedbacks\")\n\n//setup mongo, database\u003d\u003eappmap, collection\u003d\u003ecyberassets\n// builder \u003d MongodbConfigBuilder(Map(Host -\u003e List(\"localhost:27017\"), Database -\u003e \"appmap\", Collection -\u003e\"cyberassets\", SamplingRatio -\u003e 1.0))\n// readConfig \u003d builder.build()\n// mongoRDD \u003d sqlContext.fromMongoDB(readConfig)\n// mongoRDD.registerTempTable(\"cyberassets\")",
      "authenticationInfo": {},
      "dateUpdated": "Jun 7, 2016 7:32:02 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461224747162_982170501",
      "id": "20160421-131547_1541708422",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import org.elasticsearch.spark._\nimport com.stratio.datasource._\nimport com.stratio.datasource.mongodb._\nimport com.stratio.datasource.mongodb.schema._\nimport com.stratio.datasource.mongodb.writer._\nimport com.stratio.datasource.mongodb.config._\nimport com.stratio.datasource.mongodb.config.MongodbConfig._\nimport com.stratio.datasource.util.Config._\nlogs: org.apache.spark.sql.DataFrame \u003d [appId: string, date: timestamp, error: string, httpMethod: string, logLevel: string, reqId: string, request: string, response: string, responseTime: bigint, statusCode: bigint, statusMessage: string, userId: string]\nbuilder: com.stratio.datasource.mongodb.config.MongodbConfigBuilder \u003d MongodbConfigBuilder(Map(host -\u003e List(localhost:27017), database -\u003e appmap, collection -\u003e feedbacks, schema_samplingRatio -\u003e 1.0))\nreadConfig: com.stratio.datasource.util.Config \u003d com.stratio.datasource.util.ConfigBuilder$$anon$1@fe015bf1\nmongoRDD: org.apache.spark.sql.DataFrame \u003d [DESCRIPTION: string, STATUS: string, LINK: string, _id: string, CONTEXT: string, __v: int, MOOD: string, WORK_ORDER: string, comments_ref: array\u003cstring\u003e, DATE_CREATED: double, EMAIL: string, IDENTIFIER: string, DATE_UPDATED: double]\n"
      },
      "dateCreated": "Apr 21, 2016 1:15:47 PM",
      "dateStarted": "Apr 27, 2016 2:01:54 AM",
      "dateFinished": "Apr 27, 2016 2:02:08 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%elasticsearch\nsize 200\nsearch /streaming-demo/logs {\"fields\":[\"requestId\", \"httpResponse.status\", \"metadata.timestamp\",\"httpRequest.requestMethod\",\"appInfo.appId\"]}",
      "authenticationInfo": {
        "user": "admin",
        "ticket": "7a7f3e11-e990-49dd-9d8c-be9bc4e45d54"
      },
      "dateUpdated": "Jun 7, 2016 3:45:23 PM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "scatterChart",
          "height": 264.0,
          "optionOpen": true,
          "keys": [
            {
              "name": "AppInfo.appId",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "HttpRequest.requestMethod",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [
            {
              "name": "HttpRequest.requestMethod",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "scatter": {
            "xAxis": {
              "name": "AppInfo.appId",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "HttpRequest.requestMethod",
              "index": 1.0,
              "aggr": "sum"
            }
          },
          "forceY": false,
          "lineWithFocus": false
        },
        "enabled": true,
        "editorMode": "ace/mode/sql",
        "editorHide": false,
        "derivedFrom": []
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461229891873_-530799339",
      "id": "20160421-144131_783963718",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "Error : [streaming-demo] IndexNotFoundException[no such index]"
      },
      "dateCreated": "Apr 21, 2016 2:41:31 PM",
      "dateStarted": "Jun 7, 2016 3:45:00 PM",
      "dateFinished": "Jun 7, 2016 3:45:00 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql\nselect appId, httpMethod, count(1) \nas count  from logs group by appId,httpMethod",
      "authenticationInfo": {},
      "dateUpdated": "May 24, 2016 3:22:02 PM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 486.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "appId",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "count",
              "index": 2.0,
              "aggr": "sum"
            }
          ],
          "groups": [
            {
              "name": "httpMethod",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "scatter": {
            "xAxis": {
              "name": "appId",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "httpMethod",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/sql",
        "editorHide": false,
        "tableHide": false,
        "title": false,
        "lineNumbers": false,
        "derivedFrom": []
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461230877917_1223452021",
      "id": "20160421-145757_1506923570",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "no such table logs; line 2 pos 15\nset zeppelin.spark.sql.stacktrace \u003d true to see full stacktrace"
      },
      "dateCreated": "Apr 21, 2016 2:57:57 PM",
      "dateStarted": "May 24, 2016 3:22:02 PM",
      "dateFinished": "May 24, 2016 3:22:31 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql\nselect userId, context, reqId from feedbacks,logs where logs.userId\u003dfeedbacks.email",
      "authenticationInfo": {},
      "dateUpdated": "May 24, 2016 11:06:44 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 536.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "userId",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "userId",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "tableHide": false,
        "derivedFrom": []
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461306448426_1262759735",
      "id": "20160422-022728_1899181883",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "Interpreter sql not found"
      },
      "dateCreated": "Apr 22, 2016 2:27:28 AM",
      "dateStarted": "Apr 27, 2016 2:02:11 AM",
      "dateFinished": "Apr 27, 2016 2:02:13 AM",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "authenticationInfo": {},
      "dateUpdated": "Apr 27, 2016 2:01:54 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461407007103_407590926",
      "id": "20160423-062327_989415592",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": ""
      },
      "dateCreated": "Apr 23, 2016 6:23:27 AM",
      "dateStarted": "Apr 27, 2016 2:02:12 AM",
      "dateFinished": "Apr 27, 2016 2:02:13 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "/ad_hoc_analytics/Ad-hoc Analytics",
  "id": "2BGYFQD1D",
  "angularObjects": {
    "2BM3RB5JK": [],
    "2BJTWN4UK": [],
    "2BN3ENYDU": [],
    "2BPFPHSHF": [],
    "2BP77G8ZT": [],
    "2BMP6EN4K": [],
    "2BMFCU62U": [],
    "2BKX384CJ": [],
    "2BJT4X1MS": [],
    "2BNWQ939A": [],
    "2BKXTVVXA": [],
    "2BP6XUV2F": [],
    "2BM1X1GZN": [],
    "2BMUERSAC": [],
    "2BNPXD8UK": [],
    "2BMS55CT3": [],
    "2BKXY1V3K": [],
    "2BKSQSJ9K": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}